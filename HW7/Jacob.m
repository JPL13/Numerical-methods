a=0b=2*piF  = @(x)-5*cos(2*x)%Number of pointsN= 40;x=linspace(a, b, N+1);h= (b-a)/N;%Set initial conditionUa = 1.0Ub=  1.0% Set matrix AA= -(2+h^2)*eye(N-1);for (i= 1: N-1)  if i-1>0    A(i, i-1)=1;  endif    if i+1<N-1      A(i, i+1)=1;  endif  end  A=A/(h^2)% Set vector ff=zeros(N-1, 1);f(1)=F(x(2))-Ua/(h^2)f(N-1)=F(x(N))-Ub/(h^2)for (i= 2:N-2)  f(i)=F(x(i+1))end% Tolerance tol=0.005; normVal=Inf;JacobItr=0;% Initial guess 'u'u= zeros(N-1, 1)%Jacobi Methodwhile normVal>tol  uold=u    for i=1:N-1    u(i)=f(i)        for j=1: i-1      u(i)=u(i)-A(i,j)*uold(j)    end        for j=i+1:N-1      u(i)=u(i)-A(i,j)*uold(j)    end        u(i)=u(i)/A(i,i)  end    JacobItr=JacobItr+1;  normVal=sqrt(h)*norm(uold-u, 2);endfprintf('Solution of the system is : in %d iterations',JacobItr);      % Save the solution to y%y = zeros(N+1,1);  %y(1)=Ua%y(N+1)=Ub%for( i= 2:N)%  y(i)=u(i-1)%end  %Plot%plot(x, y)%axis([0, 2*pi, -2, 2])%title('Finite Difference Method')%hold on%y2=cos(2*x)%plot(x, y2)%hold off