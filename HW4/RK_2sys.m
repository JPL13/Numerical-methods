%                        RK_2sys.m%% A sample script that implements the RK-2 method for % a two dimensional autonomous ODE %% dy_1/dt = F_1(y_1,y_2)% dy_2/dt = F_2(y_1,y_2) %% where an approximate solution is computed for %% F_1(y_1,y_2) =   -(1/10)*y_1 - y_2 %% F_2(y_1,y_2) =   y_1  - (1/10)*y_2%% with initial conditions % %     y1(0) = 3%     y2(0) = 3 %% for time t = 0 to t = 10%% Created for Math 151B : Winter 2019 % Version 1/31/2019%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%                    Target Function%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Anonymous function specification of F:R^2 -> R^2 %%             F1(v(1),v(2))       F2(v(2),v(2)) %                   |                    |     F  = @(v)[v(2),  (1-v(1)^2)* v(2)- v(1)]'%     			 % The function F returns a 2 x 1 column vector (' specifies transpose) %%tInitial    = 0.0;                         % Initial timetFinal      = 20.0;                        % Final timeyInitial    = [1.0,1.0]'                   % Initial value of y (2 x 1 column vector) N           = 200;                         % Number of timesteps taken%%    Set plot limits for phase plane plot %y1PlotMin =   -5.0;y1PlotMax =    5.0;y2PlotMin =   -5.0;y2PlotMax =    5.0;h           = (tFinal - tInitial)/N;    % Timestep determinationy           = zeros(2,N+1);             % 2 x N+1 array to hold solution component valuest           = zeros(1,N+1); %%////////////////////////////////////////////////////////%     Computing the solution using RK-2 method    %////////////////////////////////////////////////////////%t(1)    = tInitial;y(:,1)  = yInitial;     for(i = 1:N)        t(i+1)    = t(i) + h;        yStar     =  y(:,i) + h*F(y(:,i));        y(:,i+1)  =  y(:,i) + (h/2.0)*F(y(:,i)) + (h/2.0)*F(yStar);end    sprintf(['\n N = %3d, h = %10.5f, Y(1,%3.1f) is  %-25.15f '],N,h,t(i+1),y(1,N+1))sprintf(['\n N = %3d, h = %10.5f, Y(2,%3.1f) is  %-25.15f '],N,h,t(i+1),y(2,N+1)) % plot, then scale by calling axis command %plot(y(1,:),y(2,:));     phase plane plot%axis([y1PlotMin,y1PlotMax,y2PlotMin,y2PlotMax]);%title('RK-2 Results ')%xlabel('y_1(t)') %ylabel('y_2(t)')plot(t,y(2,:));axis([0,20,yPlotMin,yPlotMax]);%pause